# {{ ansible_managed }}
# Any changes made here will be lost
{%	if item['comment'] is defined %}
# item['comment']
{%	endif %}
{%	if item['onboot']|default('yes') == 'yes' %}
auto {{ item['name'] }}
{%	endif %}
{%	if item['hotplug']|default('yes') == 'yes' %}
allow-hotplug {{ item['name'] }}
{%	endif %}
{%	if  interface_is_vlan is defined and interface_is_vlan %}
iface {{ item['name'] }} inet {{ item['method']|default('manual')|lower }}
  vlan-raw-device {{ item['dev'] }}
{%	else %}
iface {{ item['name'] }} inet {{ item['method']|default('manual')|lower }}
{%	endif %}
{%	if item['method'] is defined and item['method']|lower == "static" %}
{%		if item['netmask'] is defined %}
  address {{ item['ipaddr'] }}
  netmask {{ item['netmask'] }}
{%		else %}
  address {{ item['ipaddr'] }}/{{ item['prefix'] }}
{%		endif %}
{%		if item['gw'] is defined %}
  gateway {{ item['gw'] }}
{%		endif %}
{%	endif %}
{%	if item['wireless_network'] is defined and item['wireless_network'] %}
  wpa-ssid {{ item['wpa_ssid'] }}
  wpa-psk {{ item['wpa_psk'] }}
{%	endif %}
{%	if interface_type == 'Bond' %}
  slaves{% for s in item['slaves'] %} {{ s }}{% endfor %}

{%		for opt in item['parameters'] %}
  bond-{{ opt['param']|replace('_','-') }} {{ opt['val'] }}
{%		endfor %}
{%		if item['mtu'] is defined %}
  up {% for s in item['slaves'] %}ip link set dev {{ s }} mtu {{ item['mtu'] }} && {% endfor %}ip link set dev {{ item['name'] }} mtu {{ item['mtu'] }}
{%		endif %}
{%	elif interface_type == 'Bridge' %}
{%		if item['ports'] is defined %}
  bridge_ports{% for p in item['ports'] %} {{ p }}{% endfor %}

{%		endif %}
{%		if (item.stp is defined) and (item.stp == 'no' or item.stp == 'off') %}
  bridge_stp off
{%              else %}
  bridge_stp on
{%              endif %}
{%	else %}
{%		if item['mtu'] is defined %}
  mtu {{ item['mtu'] }}
{%		endif %}
{%		if  item['ethtool'] is defined %}
  up sleep 5; ethtool -s {{ item['dev'] }} {{ item['ethtool'] }}
{%		endif %}
{%	endif %}
{%	if item.method is defined and (item.method|lower == "static" or item.method|lower == "dhcp") %}
{%		if item.dns is defined %}
  dns-nameservers{% for ns in item.dns %} {{ ns }}{% endfor %}

{%		endif %}
{%		if item.search is defined %}
  dns-search{% for s in item.search %} {{ s }}{% endfor %}

{%		endif %}
{%	endif %}
{%	if item.routes is defined and item.method is defined and (item.method|lower == "static" or item.method|lower == "dhcp") %}
{%		for route in item.routes %}
{%			if route.gw is defined %}
  up ip route add {{ route.to }} via {{ route.gw }} dev {{ item['dev'] }}{% if  item.vlan_id is defined %}.{{ item['vlan_id'] }}{%endif %}

  down ip route del {{ route.to }} via {{ route.gw }} dev {{ item['dev'] }}{% if  item.vlan_id is defined %}.{{ item['vlan_id'] }}{%endif %}

{%			else %}  up ip route add {{ route.to }} via dev {{ item.dev }}{% if  item.vlan_id is defined %}.{{ item['vlan_id'] }}{%endif %}

  down ip route del {{ route.to }} via dev {{ item.dev }}{% if  item.vlan_id is defined %}.{{ item['vlan_id'] }}{%endif %}

{%			endif %}
{%		endfor %}
{%	endif %}
{%	if item['ip'] is defined and (item['method'] is undefined or item['method']|lower == "static" or item['method']|lower == "manual") %}

iface {{ item['name'] }} inet {{ item['method']|default('manual')|lower }}
{%		for ip in item['ip'] %}
{%			if ip['netmask'] is defined %}
  address {{ ip['ipaddr'] }}
  netmask {{ ip['netmask'] }}
{%			else %}
  address {{ ip['ipaddr'] }}/{{ ip['prefix'] }}
{%			endif %}
{%			if ip['gw'] is defined %}
  gateway {{ ip['gw'] }}
{%			endif %}
{%		endfor %}
{%	endif %}
